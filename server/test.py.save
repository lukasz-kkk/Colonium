import socket
import threading
import os
from barka import *
from utils import *
import time
from player import Player
from map import *
PLAYERS=[]
PORT = 2137
SERVER="20.117.176.229"
SERVER = socket.gethostbyname(socket.gethostname())
server = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
#++server.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
server.bind((SERVER,PORT))


class Player():
    def __init__(self,conn,addr) -> None:
        self.connection=conn
        self.address=addr
        self.connected=True
        global z
    def run(self):
        while self.connected:
            msg = self.connection.recv(4096)
            msg = msg.decode('utf-8')
            st=time.time()
            
            try:
                error=None
                order=json.loads(msg)
                
                if msg=="disconunu":
                    con=False
                    break
                
                if order["type"]=="map":
                    pass
                    #out=str(extract_dict(z)).replace("'",'"').replace("None",'null')
                    #try:
                    #    self.send_response(out+'\n')
                    #except BrokenPipeError:
                    #    pass
                elif order["type"]=="attack":
                    log(f"[RECIVED MESSAGE]",3)
                    attack(order["src"],order["dst"])
                    self.send_response(m
                    log(f"{self.address}: {msg}",2)
                else:
                    log(f"[RECIVED MESSAGE]",3)
                    self.send_response("Unknown"+'\n')
                    log(f"{self.address}: {msg}",2)
                #out=vars(z)#dict(z.get_dict())
                #out["provinces"]=z.get_provinces()
                
                #self.send_response(str(out).replace("'",'"')+'\n')

                
                #print(time.time()-st)
            except json.decoder.JSONDecodeError:
                err="json error"
                print(msg)
                print("xd")
                msg="JSON ERROR"
                self.send_response(msg+'\n')
                #continue
            
    def send_response(self, msg):
        for receiver in PLAYERS:
            #log(f"[MESSAGE SENT TO {receiver.address}]",3)
            receiver.connection.sendall(msg.encode('utf-8'))

def send_map():
    global z
    while True:
        #print("MAP UPDATED")
        out=str(extract_dict(z)).replace("'",'"').replace("None",'null')
        try:
            Player.send_response(Player,out+'\n')
        except BrokenPipeError:
            pass
        time.sleep(0.2)


def handle_client(conn,addr):
    player = Player(conn,addr)
    log(f"[PLAYER CONNECTED]",3)
    PLAYERS.append(player)
    try:
        player.run()
    except ConnectionResetError:
        PLAYERS.remove(player)
        conn.close()
        log(f"[PLAYER DISCONNECTED]",5)
def start():
    server.listen()
    thread = threading.Thread(target=send_map)
    thread.start()
    while True:
        conn,addr = server.accept()
        
        thread = threading.Thread(target=handle_client,args=(conn,addr))
        log(f"[ACTIVE PLAYERS:{len(PLAYERS)}]",3)
        thread.start()
        


print("STARTING...")

create_map_thread("map_1.json")
time.sleep(2)
z=get_map()

print("STARTED")

start()


#barka_tekst()



